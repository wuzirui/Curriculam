<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="campusDataSet" targetNamespace="http://tempuri.org/campusDataSet.xsd" xmlns:mstns="http://tempuri.org/campusDataSet.xsd" xmlns="http://tempuri.org/campusDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="campusConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="campusConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Curriculam.Properties.Settings.GlobalReference.Default.campusConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AvailableCourseTableAdapter" GeneratorDataComponentClassName="AvailableCourseTableAdapter" Name="AvailableCourse" UserDataComponentName="AvailableCourseTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="campusConnectionString (Settings)" DbObjectName="campus.dbo.AvailableCourse" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[AvailableCourse] WHERE (([LectureID] = @Original_LectureID) AND ([CourseID] = @Original_CourseID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LectureID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LectureID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CourseID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[AvailableCourse] ([LectureID], [CourseID]) VALUES (@LectureID, @CourseID);
SELECT LectureID, CourseID FROM AvailableCourse WHERE (LectureID = @LectureID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LectureID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LectureID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CourseID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT LectureID, CourseID FROM dbo.AvailableCourse</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[AvailableCourse] SET [LectureID] = @LectureID, [CourseID] = @CourseID WHERE (([LectureID] = @Original_LectureID) AND ([CourseID] = @Original_CourseID));
SELECT LectureID, CourseID FROM AvailableCourse WHERE (LectureID = @LectureID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LectureID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LectureID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CourseID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LectureID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LectureID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CourseID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="LectureID" DataSetColumn="LectureID" />
              <Mapping SourceColumn="CourseID" DataSetColumn="CourseID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CourseTableAdapter" GeneratorDataComponentClassName="CourseTableAdapter" Name="Course" UserDataComponentName="CourseTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="campusConnectionString (Settings)" DbObjectName="campus.dbo.Course" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Course] WHERE (([CourseID] = @Original_CourseID) AND ((@IsNull_Credit = 1 AND [Credit] IS NULL) OR ([Credit] = @Original_Credit)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CourseID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Credit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Credit" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@Original_Credit" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="Credit" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Course] ([CourseID], [CourseName], [Credit]) VALUES (@CourseID, @CourseName, @Credit);
SELECT CourseID, CourseName, Credit FROM Course WHERE (CourseID = @CourseID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CourseID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CourseName" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="CourseName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@Credit" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="Credit" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT CourseID, CourseName, Credit FROM dbo.Course</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Course] SET [CourseID] = @CourseID, [CourseName] = @CourseName, [Credit] = @Credit WHERE (([CourseID] = @Original_CourseID) AND ((@IsNull_Credit = 1 AND [Credit] IS NULL) OR ([Credit] = @Original_Credit)));
SELECT CourseID, CourseName, Credit FROM Course WHERE (CourseID = @CourseID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CourseID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CourseName" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="CourseName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@Credit" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="Credit" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CourseID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Credit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Credit" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@Original_Credit" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="Credit" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CourseID" DataSetColumn="课程号" />
              <Mapping SourceColumn="CourseName" DataSetColumn="课程名" />
              <Mapping SourceColumn="Credit" DataSetColumn="学分" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CourseTakenTableAdapter" GeneratorDataComponentClassName="CourseTakenTableAdapter" Name="CourseTaken" UserDataComponentName="CourseTakenTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="campusConnectionString (Settings)" DbObjectName="campus.dbo.CourseTaken" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CourseTaken] WHERE (([LectureID] = @Original_LectureID) AND ([StudentID] = @Original_StudentID) AND ((@IsNull_Score = 1 AND [Score] IS NULL) OR ([Score] = @Original_Score)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LectureID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LectureID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Score" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Score" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_Score" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="Score" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO CourseTaken
                   (LectureID, StudentID)
VALUES  (@LectureID,@StudentID); 
SELECT LectureID, StudentID, Score FROM CourseTaken WHERE (LectureID = @LectureID) AND (StudentID = @StudentID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="LectureID" ColumnName="LectureID" DataSourceName="campus.dbo.CourseTaken" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@LectureID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="LectureID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="StudentID" ColumnName="StudentID" DataSourceName="campus.dbo.CourseTaken" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@StudentID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT LectureID, StudentID, Score FROM dbo.CourseTaken</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="LectureID" DataSetColumn="LectureID" />
              <Mapping SourceColumn="StudentID" DataSetColumn="StudentID" />
              <Mapping SourceColumn="Score" DataSetColumn="Score" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="campusConnectionString (Settings)" DbObjectName="campus.dbo.CourseTaken" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT LectureID, StudentID, Score FROM dbo.CourseTaken
WHERE StudentID = @ID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="StudentID" DataSourceName="campus.dbo.CourseTaken" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DeliverLectureTableAdapter" GeneratorDataComponentClassName="DeliverLectureTableAdapter" Name="DeliverLecture" UserDataComponentName="DeliverLectureTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="campusConnectionString (Settings)" DbObjectName="campus.dbo.DeliverLecture" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[DeliverLecture] WHERE (([StaffID] = @Original_StaffID) AND ([LectureID] = @Original_LectureID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StaffID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StaffID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LectureID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LectureID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[DeliverLecture] ([StaffID], [LectureID]) VALUES (@StaffID, @LectureID);
SELECT StaffID, LectureID FROM DeliverLecture WHERE (LectureID = @LectureID) AND (StaffID = @StaffID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StaffID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StaffID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LectureID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LectureID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StaffID, LectureID FROM dbo.DeliverLecture</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[DeliverLecture] SET [StaffID] = @StaffID, [LectureID] = @LectureID WHERE (([StaffID] = @Original_StaffID) AND ([LectureID] = @Original_LectureID));
SELECT StaffID, LectureID FROM DeliverLecture WHERE (LectureID = @LectureID) AND (StaffID = @StaffID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StaffID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StaffID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LectureID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LectureID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StaffID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StaffID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LectureID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LectureID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StaffID" DataSetColumn="StaffID" />
              <Mapping SourceColumn="LectureID" DataSetColumn="LectureID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentTableAdapter" GeneratorDataComponentClassName="StudentTableAdapter" Name="Student" UserDataComponentName="StudentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="campusConnectionString (Settings)" DbObjectName="campus.dbo.Student" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Student] WHERE (([StudentID] = @Original_StudentID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Student] ([StudentID], [StudentName]) VALUES (@StudentID, @StudentName);
SELECT StudentID, StudentName FROM Student WHERE (StudentID = @StudentID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@StudentName" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="StudentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StudentID, StudentName FROM dbo.Student</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Student] SET [StudentID] = @StudentID, [StudentName] = @StudentName WHERE (([StudentID] = @Original_StudentID));
SELECT StudentID, StudentName FROM Student WHERE (StudentID = @StudentID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@StudentName" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="StudentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StudentID" DataSetColumn="StudentID" />
              <Mapping SourceColumn="StudentName" DataSetColumn="StudentName" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="campusConnectionString (Settings)" DbObjectName="campus.dbo.Student" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="QueryStudentName" Modifier="Public" Name="QueryStudentName" QueryType="Scalar" ScalarCallRetval="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="QueryStudentName">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT  StudentName
FROM      Student
WHERE StudentID = @ID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="StudentID" DataSourceName="campus.dbo.Student" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TeacherTableAdapter" GeneratorDataComponentClassName="TeacherTableAdapter" Name="Teacher" UserDataComponentName="TeacherTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="campusConnectionString (Settings)" DbObjectName="campus.dbo.Teacher" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Teacher] WHERE (([StaffID] = @Original_StaffID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StaffID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StaffID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Teacher] ([StaffID], [TeacherName]) VALUES (@StaffID, @TeacherName);
SELECT StaffID, TeacherName FROM Teacher WHERE (StaffID = @StaffID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StaffID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StaffID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TeacherName" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="TeacherName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StaffID, TeacherName FROM dbo.Teacher</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Teacher] SET [StaffID] = @StaffID, [TeacherName] = @TeacherName WHERE (([StaffID] = @Original_StaffID));
SELECT StaffID, TeacherName FROM Teacher WHERE (StaffID = @StaffID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StaffID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StaffID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TeacherName" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="TeacherName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StaffID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StaffID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StaffID" DataSetColumn="StaffID" />
              <Mapping SourceColumn="TeacherName" DataSetColumn="TeacherName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TimePeriodTableAdapter" GeneratorDataComponentClassName="TimePeriodTableAdapter" Name="TimePeriod" UserDataComponentName="TimePeriodTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="campusConnectionString (Settings)" DbObjectName="campus.dbo.TimePeriod" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT LectureID, Day, Location, WeekStart, WeekEnd, SectionStart, SectionEnd FROM dbo.TimePeriod</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="LectureID" DataSetColumn="开课号" />
              <Mapping SourceColumn="Day" DataSetColumn="星期" />
              <Mapping SourceColumn="Location" DataSetColumn="上课地点" />
              <Mapping SourceColumn="WeekStart" DataSetColumn="开始周" />
              <Mapping SourceColumn="WeekEnd" DataSetColumn="结束周" />
              <Mapping SourceColumn="SectionStart" DataSetColumn="开始节" />
              <Mapping SourceColumn="SectionEnd" DataSetColumn="结束节" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="campusConnectionString (Settings)" DbObjectName="campus.dbo.TimePeriod" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Day, LectureID, Location, SectionEnd, SectionStart, WeekEnd, WeekStart FROM TimePeriod WHERE (LectureID = @CLID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="CLID" ColumnName="LectureID" DataSourceName="campus.dbo.TimePeriod" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CLID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="LectureID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CourseListTableAdapter" GeneratorDataComponentClassName="CourseListTableAdapter" Name="CourseList" UserDataComponentName="CourseListTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="campusConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT  AvailableCourse.CourseID, AvailableCourse.LectureID, Course.CourseName, Teacher.TeacherName
FROM      AvailableCourse INNER JOIN
                   Course ON AvailableCourse.CourseID = Course.CourseID INNER JOIN
                   DeliverLecture ON AvailableCourse.LectureID = DeliverLecture.LectureID INNER JOIN
                   Teacher ON DeliverLecture.StaffID = Teacher.StaffID</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CourseID" DataSetColumn="CourseID" />
              <Mapping SourceColumn="LectureID" DataSetColumn="LectureID" />
              <Mapping SourceColumn="CourseName" DataSetColumn="CourseName" />
              <Mapping SourceColumn="TeacherName" DataSetColumn="TeacherName" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="campusConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT  AvailableCourse.CourseID, AvailableCourse.LectureID, Course.CourseName, Teacher.TeacherName
FROM      AvailableCourse INNER JOIN
                   Course ON AvailableCourse.CourseID = Course.CourseID INNER JOIN
                   DeliverLecture ON AvailableCourse.LectureID = DeliverLecture.LectureID INNER JOIN
                   Teacher ON DeliverLecture.StaffID = Teacher.StaffID
WHERE   (AvailableCourse.CourseID = @CID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="CID" ColumnName="CourseID" DataSourceName="campus.dbo.AvailableCourse" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="CourseID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentAvailableCourseListTableAdapter" GeneratorDataComponentClassName="StudentAvailableCourseListTableAdapter" Name="StudentAvailableCourseList" UserDataComponentName="StudentAvailableCourseListTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="campusConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillAvailable" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="FillAvailable" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="FillAvailable">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT  AvailableCourse.LectureID, Course.CourseName, Course.Credit, Teacher.TeacherName, AvailableCourse.CourseID, @SID AS StudentID
FROM      AvailableCourse INNER JOIN
                   Course ON AvailableCourse.CourseID = Course.CourseID INNER JOIN
                   DeliverLecture ON AvailableCourse.LectureID = DeliverLecture.LectureID INNER JOIN
                   Teacher ON DeliverLecture.StaffID = Teacher.StaffID
WHERE   (AvailableCourse.CourseID NOT IN
                       (SELECT  AvailableCourse_1.CourseID
                        FROM       CourseTaken INNER JOIN
                                           AvailableCourse AS AvailableCourse_1 ON CourseTaken.LectureID = AvailableCourse_1.CourseID
                        WHERE    (CourseTaken.StudentID = @SID)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SID" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="AnsiString" Direction="Input" ParameterName="@SID" Precision="0" Scale="0" Size="1024" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="LectureID" DataSetColumn="LectureID" />
              <Mapping SourceColumn="CourseName" DataSetColumn="CourseName" />
              <Mapping SourceColumn="Credit" DataSetColumn="Credit" />
              <Mapping SourceColumn="TeacherName" DataSetColumn="TeacherName" />
              <Mapping SourceColumn="CourseID" DataSetColumn="CourseID" />
              <Mapping SourceColumn="StudentID" DataSetColumn="StudentID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentSelectedCourseListTableAdapter" GeneratorDataComponentClassName="StudentSelectedCourseListTableAdapter" Name="StudentSelectedCourseList" UserDataComponentName="StudentSelectedCourseListTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="campusConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillSelected" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="FillSelected" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="FillSelected">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM CourseTaken
WHERE   (LectureID = @LectureID) AND (StudentID = @StudentID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="LectureID" ColumnName="LectureID" DataSourceName="campus.dbo.CourseTaken" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@LectureID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="LectureID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="StudentID" ColumnName="StudentID" DataSourceName="campus.dbo.CourseTaken" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@StudentID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO CourseTaken
                   (LectureID, StudentID)
VALUES  (@LectureID,@StudentID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="LectureID" ColumnName="LectureID" DataSourceName="campus.dbo.CourseTaken" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@LectureID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="LectureID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="StudentID" ColumnName="StudentID" DataSourceName="campus.dbo.CourseTaken" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@StudentID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT  AvailableCourse.LectureID, Course.CourseName, Course.Credit, Teacher.TeacherName, AvailableCourse.CourseID, @SID as StudentID
FROM      AvailableCourse INNER JOIN
                   Course ON AvailableCourse.CourseID = Course.CourseID INNER JOIN
                   CourseTaken ON AvailableCourse.LectureID = CourseTaken.LectureID INNER JOIN
                   DeliverLecture ON AvailableCourse.LectureID = DeliverLecture.LectureID INNER JOIN
                   Teacher ON DeliverLecture.StaffID = Teacher.StaffID
WHERE   (AvailableCourse.LectureID IN
                       (SELECT  LectureID
                        FROM       CourseTaken AS CourseTaken_1
                        WHERE    (StudentID = @SID)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SID" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="AnsiString" Direction="Input" ParameterName="@SID" Precision="0" Scale="0" Size="1024" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="LectureID" DataSetColumn="LectureID" />
              <Mapping SourceColumn="CourseName" DataSetColumn="CourseName" />
              <Mapping SourceColumn="Credit" DataSetColumn="Credit" />
              <Mapping SourceColumn="TeacherName" DataSetColumn="TeacherName" />
              <Mapping SourceColumn="CourseID" DataSetColumn="CourseID" />
              <Mapping SourceColumn="StudentID" DataSetColumn="StudentID" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="campusDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="campusDataSet" msprop:Generator_UserDSName="campusDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Course" msprop:Generator_TableClassName="CourseDataTable" msprop:Generator_TableVarName="tableCourse" msprop:Generator_RowChangedName="CourseRowChanged" msprop:Generator_TablePropName="Course" msprop:Generator_RowDeletingName="CourseRowDeleting" msprop:Generator_RowChangingName="CourseRowChanging" msprop:Generator_RowEvHandlerName="CourseRowChangeEventHandler" msprop:Generator_RowDeletedName="CourseRowDeleted" msprop:Generator_RowClassName="CourseRow" msprop:Generator_UserTableName="Course" msprop:Generator_RowEvArgName="CourseRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="课程号" msprop:Generator_ColumnVarNameInTable="column课程号" msprop:Generator_ColumnPropNameInRow="课程号" msprop:Generator_ColumnPropNameInTable="课程号Column" msprop:Generator_UserColumnName="课程号" type="xs:int" />
              <xs:element name="课程名" msprop:Generator_ColumnVarNameInTable="column课程名" msprop:Generator_ColumnPropNameInRow="课程名" msprop:Generator_ColumnPropNameInTable="课程名Column" msprop:Generator_UserColumnName="课程名" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="学分" msdata:Caption="Credit" msprop:Generator_ColumnVarNameInTable="column学分" msprop:Generator_ColumnPropNameInRow="学分" msprop:Generator_ColumnPropNameInTable="学分Column" msprop:Generator_UserColumnName="学分" type="xs:float" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CourseTaken" msprop:Generator_TableClassName="CourseTakenDataTable" msprop:Generator_TableVarName="tableCourseTaken" msprop:Generator_RowChangedName="CourseTakenRowChanged" msprop:Generator_TablePropName="CourseTaken" msprop:Generator_RowDeletingName="CourseTakenRowDeleting" msprop:Generator_RowChangingName="CourseTakenRowChanging" msprop:Generator_RowEvHandlerName="CourseTakenRowChangeEventHandler" msprop:Generator_RowDeletedName="CourseTakenRowDeleted" msprop:Generator_RowClassName="CourseTakenRow" msprop:Generator_UserTableName="CourseTaken" msprop:Generator_RowEvArgName="CourseTakenRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="LectureID" msprop:Generator_ColumnVarNameInTable="columnLectureID" msprop:Generator_ColumnPropNameInRow="LectureID" msprop:Generator_ColumnPropNameInTable="LectureIDColumn" msprop:Generator_UserColumnName="LectureID" type="xs:int" />
              <xs:element name="StudentID" msprop:Generator_ColumnVarNameInTable="columnStudentID" msprop:Generator_ColumnPropNameInRow="StudentID" msprop:Generator_ColumnPropNameInTable="StudentIDColumn" msprop:Generator_UserColumnName="StudentID" type="xs:int" />
              <xs:element name="Score" msprop:Generator_ColumnVarNameInTable="columnScore" msprop:Generator_ColumnPropNameInRow="Score" msprop:Generator_ColumnPropNameInTable="ScoreColumn" msprop:Generator_UserColumnName="Score" type="xs:short" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DeliverLecture" msprop:Generator_TableClassName="DeliverLectureDataTable" msprop:Generator_TableVarName="tableDeliverLecture" msprop:Generator_RowChangedName="DeliverLectureRowChanged" msprop:Generator_TablePropName="DeliverLecture" msprop:Generator_RowDeletingName="DeliverLectureRowDeleting" msprop:Generator_RowChangingName="DeliverLectureRowChanging" msprop:Generator_RowEvHandlerName="DeliverLectureRowChangeEventHandler" msprop:Generator_RowDeletedName="DeliverLectureRowDeleted" msprop:Generator_RowClassName="DeliverLectureRow" msprop:Generator_UserTableName="DeliverLecture" msprop:Generator_RowEvArgName="DeliverLectureRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StaffID" msprop:Generator_ColumnVarNameInTable="columnStaffID" msprop:Generator_ColumnPropNameInRow="StaffID" msprop:Generator_ColumnPropNameInTable="StaffIDColumn" msprop:Generator_UserColumnName="StaffID" type="xs:int" />
              <xs:element name="LectureID" msprop:Generator_ColumnVarNameInTable="columnLectureID" msprop:Generator_ColumnPropNameInRow="LectureID" msprop:Generator_ColumnPropNameInTable="LectureIDColumn" msprop:Generator_UserColumnName="LectureID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Student" msprop:Generator_TableClassName="StudentDataTable" msprop:Generator_TableVarName="tableStudent" msprop:Generator_RowChangedName="StudentRowChanged" msprop:Generator_TablePropName="Student" msprop:Generator_RowDeletingName="StudentRowDeleting" msprop:Generator_RowChangingName="StudentRowChanging" msprop:Generator_RowEvHandlerName="StudentRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentRowDeleted" msprop:Generator_RowClassName="StudentRow" msprop:Generator_UserTableName="Student" msprop:Generator_RowEvArgName="StudentRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StudentID" msprop:Generator_ColumnVarNameInTable="columnStudentID" msprop:Generator_ColumnPropNameInRow="StudentID" msprop:Generator_ColumnPropNameInTable="StudentIDColumn" msprop:Generator_UserColumnName="StudentID" type="xs:int" />
              <xs:element name="StudentName" msprop:Generator_ColumnVarNameInTable="columnStudentName" msprop:Generator_ColumnPropNameInRow="StudentName" msprop:Generator_ColumnPropNameInTable="StudentNameColumn" msprop:Generator_UserColumnName="StudentName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Teacher" msprop:Generator_TableClassName="TeacherDataTable" msprop:Generator_TableVarName="tableTeacher" msprop:Generator_RowChangedName="TeacherRowChanged" msprop:Generator_TablePropName="Teacher" msprop:Generator_RowDeletingName="TeacherRowDeleting" msprop:Generator_RowChangingName="TeacherRowChanging" msprop:Generator_RowEvHandlerName="TeacherRowChangeEventHandler" msprop:Generator_RowDeletedName="TeacherRowDeleted" msprop:Generator_RowClassName="TeacherRow" msprop:Generator_UserTableName="Teacher" msprop:Generator_RowEvArgName="TeacherRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StaffID" msprop:Generator_ColumnVarNameInTable="columnStaffID" msprop:Generator_ColumnPropNameInRow="StaffID" msprop:Generator_ColumnPropNameInTable="StaffIDColumn" msprop:Generator_UserColumnName="StaffID" type="xs:int" />
              <xs:element name="TeacherName" msprop:Generator_ColumnVarNameInTable="columnTeacherName" msprop:Generator_ColumnPropNameInRow="TeacherName" msprop:Generator_ColumnPropNameInTable="TeacherNameColumn" msprop:Generator_UserColumnName="TeacherName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TimePeriod" msprop:Generator_TableClassName="TimePeriodDataTable" msprop:Generator_TableVarName="tableTimePeriod" msprop:Generator_RowChangedName="TimePeriodRowChanged" msprop:Generator_TablePropName="TimePeriod" msprop:Generator_RowDeletingName="TimePeriodRowDeleting" msprop:Generator_RowChangingName="TimePeriodRowChanging" msprop:Generator_RowEvHandlerName="TimePeriodRowChangeEventHandler" msprop:Generator_RowDeletedName="TimePeriodRowDeleted" msprop:Generator_RowClassName="TimePeriodRow" msprop:Generator_UserTableName="TimePeriod" msprop:Generator_RowEvArgName="TimePeriodRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="开课号" msprop:Generator_ColumnVarNameInTable="column开课号" msprop:Generator_ColumnPropNameInRow="开课号" msprop:Generator_ColumnPropNameInTable="开课号Column" msprop:Generator_UserColumnName="开课号" type="xs:int" />
              <xs:element name="星期" msprop:Generator_ColumnVarNameInTable="column星期" msprop:Generator_ColumnPropNameInRow="星期" msprop:Generator_ColumnPropNameInTable="星期Column" msprop:Generator_UserColumnName="星期" type="xs:int" minOccurs="0" />
              <xs:element name="上课地点" msprop:Generator_ColumnVarNameInTable="column上课地点" msprop:Generator_ColumnPropNameInRow="上课地点" msprop:Generator_ColumnPropNameInTable="上课地点Column" msprop:Generator_UserColumnName="上课地点" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="开始周" msprop:Generator_ColumnVarNameInTable="column开始周" msprop:Generator_ColumnPropNameInRow="开始周" msprop:Generator_ColumnPropNameInTable="开始周Column" msprop:Generator_UserColumnName="开始周" type="xs:int" minOccurs="0" />
              <xs:element name="结束周" msprop:Generator_ColumnVarNameInTable="column结束周" msprop:Generator_ColumnPropNameInRow="结束周" msprop:Generator_ColumnPropNameInTable="结束周Column" msprop:Generator_UserColumnName="结束周" type="xs:int" minOccurs="0" />
              <xs:element name="开始节" msprop:Generator_ColumnVarNameInTable="column开始节" msprop:Generator_ColumnPropNameInRow="开始节" msprop:Generator_ColumnPropNameInTable="开始节Column" msprop:Generator_UserColumnName="开始节" type="xs:int" minOccurs="0" />
              <xs:element name="结束节" msprop:Generator_ColumnVarNameInTable="column结束节" msprop:Generator_ColumnPropNameInRow="结束节" msprop:Generator_ColumnPropNameInTable="结束节Column" msprop:Generator_UserColumnName="结束节" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="AvailableCourse" msprop:Generator_TableClassName="AvailableCourseDataTable" msprop:Generator_TableVarName="tableAvailableCourse" msprop:Generator_RowChangedName="AvailableCourseRowChanged" msprop:Generator_TablePropName="AvailableCourse" msprop:Generator_RowDeletingName="AvailableCourseRowDeleting" msprop:Generator_RowChangingName="AvailableCourseRowChanging" msprop:Generator_RowEvHandlerName="AvailableCourseRowChangeEventHandler" msprop:Generator_RowDeletedName="AvailableCourseRowDeleted" msprop:Generator_RowClassName="AvailableCourseRow" msprop:Generator_UserTableName="AvailableCourse" msprop:Generator_RowEvArgName="AvailableCourseRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="LectureID" msprop:Generator_ColumnVarNameInTable="columnLectureID" msprop:Generator_ColumnPropNameInRow="LectureID" msprop:Generator_ColumnPropNameInTable="LectureIDColumn" msprop:Generator_UserColumnName="LectureID" type="xs:int" />
              <xs:element name="CourseID" msprop:Generator_ColumnVarNameInTable="columnCourseID" msprop:Generator_ColumnPropNameInRow="CourseID" msprop:Generator_ColumnPropNameInTable="CourseIDColumn" msprop:Generator_UserColumnName="CourseID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CourseList" msprop:Generator_TableClassName="CourseListDataTable" msprop:Generator_TableVarName="tableCourseList" msprop:Generator_TablePropName="CourseList" msprop:Generator_RowDeletingName="CourseListRowDeleting" msprop:Generator_RowChangingName="CourseListRowChanging" msprop:Generator_RowEvHandlerName="CourseListRowChangeEventHandler" msprop:Generator_RowDeletedName="CourseListRowDeleted" msprop:Generator_UserTableName="CourseList" msprop:Generator_RowChangedName="CourseListRowChanged" msprop:Generator_RowEvArgName="CourseListRowChangeEvent" msprop:Generator_RowClassName="CourseListRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CourseID" msprop:Generator_ColumnVarNameInTable="columnCourseID" msprop:Generator_ColumnPropNameInRow="CourseID" msprop:Generator_ColumnPropNameInTable="CourseIDColumn" msprop:Generator_UserColumnName="CourseID" type="xs:int" />
              <xs:element name="LectureID" msprop:Generator_ColumnVarNameInTable="columnLectureID" msprop:Generator_ColumnPropNameInRow="LectureID" msprop:Generator_ColumnPropNameInTable="LectureIDColumn" msprop:Generator_UserColumnName="LectureID" type="xs:int" />
              <xs:element name="CourseName" msprop:Generator_ColumnVarNameInTable="columnCourseName" msprop:Generator_ColumnPropNameInRow="CourseName" msprop:Generator_ColumnPropNameInTable="CourseNameColumn" msprop:Generator_UserColumnName="CourseName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TeacherName" msprop:Generator_ColumnVarNameInTable="columnTeacherName" msprop:Generator_ColumnPropNameInRow="TeacherName" msprop:Generator_ColumnPropNameInTable="TeacherNameColumn" msprop:Generator_UserColumnName="TeacherName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="StudentAvailableCourseList" msprop:Generator_TableClassName="StudentAvailableCourseListDataTable" msprop:Generator_TableVarName="tableStudentAvailableCourseList" msprop:Generator_RowChangedName="StudentAvailableCourseListRowChanged" msprop:Generator_TablePropName="StudentAvailableCourseList" msprop:Generator_RowDeletingName="StudentAvailableCourseListRowDeleting" msprop:Generator_RowChangingName="StudentAvailableCourseListRowChanging" msprop:Generator_RowEvHandlerName="StudentAvailableCourseListRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentAvailableCourseListRowDeleted" msprop:Generator_RowClassName="StudentAvailableCourseListRow" msprop:Generator_UserTableName="StudentAvailableCourseList" msprop:Generator_RowEvArgName="StudentAvailableCourseListRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="LectureID" msprop:Generator_ColumnVarNameInTable="columnLectureID" msprop:Generator_ColumnPropNameInRow="LectureID" msprop:Generator_ColumnPropNameInTable="LectureIDColumn" msprop:Generator_UserColumnName="LectureID" type="xs:int" />
              <xs:element name="CourseName" msprop:Generator_ColumnVarNameInTable="columnCourseName" msprop:Generator_ColumnPropNameInRow="CourseName" msprop:Generator_ColumnPropNameInTable="CourseNameColumn" msprop:Generator_UserColumnName="CourseName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Credit" msprop:Generator_ColumnVarNameInTable="columnCredit" msprop:Generator_ColumnPropNameInRow="Credit" msprop:Generator_ColumnPropNameInTable="CreditColumn" msprop:Generator_UserColumnName="Credit" type="xs:float" minOccurs="0" />
              <xs:element name="TeacherName" msprop:Generator_ColumnVarNameInTable="columnTeacherName" msprop:Generator_ColumnPropNameInRow="TeacherName" msprop:Generator_ColumnPropNameInTable="TeacherNameColumn" msprop:Generator_UserColumnName="TeacherName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CourseID" msprop:Generator_ColumnVarNameInTable="columnCourseID" msprop:Generator_ColumnPropNameInRow="CourseID" msprop:Generator_ColumnPropNameInTable="CourseIDColumn" msprop:Generator_UserColumnName="CourseID" type="xs:int" />
              <xs:element name="StudentID" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnStudentID" msprop:Generator_ColumnPropNameInRow="StudentID" msprop:Generator_ColumnPropNameInTable="StudentIDColumn" msprop:Generator_UserColumnName="StudentID" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="StudentSelectedCourseList" msprop:Generator_TableClassName="StudentSelectedCourseListDataTable" msprop:Generator_TableVarName="tableStudentSelectedCourseList" msprop:Generator_RowChangedName="StudentSelectedCourseListRowChanged" msprop:Generator_TablePropName="StudentSelectedCourseList" msprop:Generator_RowDeletingName="StudentSelectedCourseListRowDeleting" msprop:Generator_RowChangingName="StudentSelectedCourseListRowChanging" msprop:Generator_RowEvHandlerName="StudentSelectedCourseListRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentSelectedCourseListRowDeleted" msprop:Generator_RowClassName="StudentSelectedCourseListRow" msprop:Generator_UserTableName="StudentSelectedCourseList" msprop:Generator_RowEvArgName="StudentSelectedCourseListRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="LectureID" msprop:Generator_ColumnVarNameInTable="columnLectureID" msprop:Generator_ColumnPropNameInRow="LectureID" msprop:Generator_ColumnPropNameInTable="LectureIDColumn" msprop:Generator_UserColumnName="LectureID" type="xs:int" />
              <xs:element name="CourseName" msprop:Generator_ColumnVarNameInTable="columnCourseName" msprop:Generator_ColumnPropNameInRow="CourseName" msprop:Generator_ColumnPropNameInTable="CourseNameColumn" msprop:Generator_UserColumnName="CourseName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Credit" msprop:Generator_ColumnVarNameInTable="columnCredit" msprop:Generator_ColumnPropNameInRow="Credit" msprop:Generator_ColumnPropNameInTable="CreditColumn" msprop:Generator_UserColumnName="Credit" type="xs:float" minOccurs="0" />
              <xs:element name="TeacherName" msprop:Generator_ColumnVarNameInTable="columnTeacherName" msprop:Generator_ColumnPropNameInRow="TeacherName" msprop:Generator_ColumnPropNameInTable="TeacherNameColumn" msprop:Generator_UserColumnName="TeacherName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CourseID" msprop:Generator_ColumnVarNameInTable="columnCourseID" msprop:Generator_ColumnPropNameInRow="CourseID" msprop:Generator_ColumnPropNameInTable="CourseIDColumn" msprop:Generator_UserColumnName="CourseID" type="xs:int" />
              <xs:element name="StudentID" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnStudentID" msprop:Generator_ColumnPropNameInRow="StudentID" msprop:Generator_ColumnPropNameInTable="StudentIDColumn" msprop:Generator_UserColumnName="StudentID" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Course" />
      <xs:field xpath="mstns:课程号" />
    </xs:unique>
    <xs:unique name="CourseTaken_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CourseTaken" />
      <xs:field xpath="mstns:LectureID" />
      <xs:field xpath="mstns:StudentID" />
    </xs:unique>
    <xs:unique name="DeliverLecture_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DeliverLecture" />
      <xs:field xpath="mstns:StaffID" />
      <xs:field xpath="mstns:LectureID" />
    </xs:unique>
    <xs:unique name="Student_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Student" />
      <xs:field xpath="mstns:StudentID" />
    </xs:unique>
    <xs:unique name="Teacher_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Teacher" />
      <xs:field xpath="mstns:StaffID" />
    </xs:unique>
    <xs:unique name="AvailableCourse_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:AvailableCourse" />
      <xs:field xpath="mstns:LectureID" />
    </xs:unique>
    <xs:unique name="CourseList_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CourseList" />
      <xs:field xpath="mstns:LectureID" />
    </xs:unique>
    <xs:unique name="StudentAvailableCourseList_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:StudentAvailableCourseList" />
      <xs:field xpath="mstns:LectureID" />
    </xs:unique>
    <xs:unique name="StudentSelectedCourseList_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:StudentSelectedCourseList" />
      <xs:field xpath="mstns:LectureID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_COURSETA_RELATIONS_STUDENT" msdata:parent="Student" msdata:child="CourseTaken" msdata:parentkey="StudentID" msdata:childkey="StudentID" msprop:Generator_UserChildTable="CourseTaken" msprop:Generator_ChildPropName="GetCourseTakenRows" msprop:Generator_UserRelationName="FK_COURSETA_RELATIONS_STUDENT" msprop:Generator_ParentPropName="StudentRow" msprop:Generator_RelationVarName="relationFK_COURSETA_RELATIONS_STUDENT" msprop:Generator_UserParentTable="Student" />
      <msdata:Relationship name="FK_RELATION_RELATIONS_TEACHER" msdata:parent="Teacher" msdata:child="DeliverLecture" msdata:parentkey="StaffID" msdata:childkey="StaffID" msprop:Generator_UserChildTable="DeliverLecture" msprop:Generator_ChildPropName="GetDeliverLectureRows" msprop:Generator_UserRelationName="FK_RELATION_RELATIONS_TEACHER" msprop:Generator_ParentPropName="TeacherRow" msprop:Generator_RelationVarName="relationFK_RELATION_RELATIONS_TEACHER" msprop:Generator_UserParentTable="Teacher" />
      <msdata:Relationship name="FK_TIMEPERI_RELATIONS_AVAILABL" msdata:parent="AvailableCourse" msdata:child="TimePeriod" msdata:parentkey="LectureID" msdata:childkey="开课号" msprop:Generator_UserChildTable="TimePeriod" msprop:Generator_ChildPropName="GetTimePeriodRows" msprop:Generator_UserRelationName="FK_TIMEPERI_RELATIONS_AVAILABL" msprop:Generator_RelationVarName="relationFK_TIMEPERI_RELATIONS_AVAILABL" msprop:Generator_UserParentTable="AvailableCourse" msprop:Generator_ParentPropName="AvailableCourseRow" />
      <msdata:Relationship name="FK_RELATION_RELATIONS_AVAILABL" msdata:parent="AvailableCourse" msdata:child="DeliverLecture" msdata:parentkey="LectureID" msdata:childkey="LectureID" msprop:Generator_UserChildTable="DeliverLecture" msprop:Generator_ChildPropName="GetDeliverLectureRows" msprop:Generator_UserRelationName="FK_RELATION_RELATIONS_AVAILABL" msprop:Generator_RelationVarName="relationFK_RELATION_RELATIONS_AVAILABL" msprop:Generator_UserParentTable="AvailableCourse" msprop:Generator_ParentPropName="AvailableCourseRow" />
      <msdata:Relationship name="FK_COURSETA_RELATIONS_AVAILABL" msdata:parent="AvailableCourse" msdata:child="CourseTaken" msdata:parentkey="LectureID" msdata:childkey="LectureID" msprop:Generator_UserChildTable="CourseTaken" msprop:Generator_ChildPropName="GetCourseTakenRows" msprop:Generator_UserRelationName="FK_COURSETA_RELATIONS_AVAILABL" msprop:Generator_RelationVarName="relationFK_COURSETA_RELATIONS_AVAILABL" msprop:Generator_UserParentTable="AvailableCourse" msprop:Generator_ParentPropName="AvailableCourseRow" />
      <msdata:Relationship name="FK_COURSETA_RELATIONS_AVAILABL1" msdata:parent="CourseList" msdata:child="CourseTaken" msdata:parentkey="LectureID" msdata:childkey="LectureID" msprop:Generator_UserChildTable="CourseTaken" msprop:Generator_ChildPropName="GetCourseTakenRows" msprop:Generator_UserRelationName="FK_COURSETA_RELATIONS_AVAILABL1" msprop:Generator_RelationVarName="relationFK_COURSETA_RELATIONS_AVAILABL1" msprop:Generator_UserParentTable="CourseList" msprop:Generator_ParentPropName="CourseListRow" />
      <msdata:Relationship name="FK_RELATION_RELATIONS_AVAILABL1" msdata:parent="CourseList" msdata:child="DeliverLecture" msdata:parentkey="LectureID" msdata:childkey="LectureID" msprop:Generator_UserChildTable="DeliverLecture" msprop:Generator_ChildPropName="GetDeliverLectureRows" msprop:Generator_UserRelationName="FK_RELATION_RELATIONS_AVAILABL1" msprop:Generator_RelationVarName="relationFK_RELATION_RELATIONS_AVAILABL1" msprop:Generator_UserParentTable="CourseList" msprop:Generator_ParentPropName="CourseListRow" />
      <msdata:Relationship name="FK_TIMEPERI_RELATIONS_AVAILABL1" msdata:parent="CourseList" msdata:child="TimePeriod" msdata:parentkey="LectureID" msdata:childkey="开课号" msprop:Generator_UserChildTable="TimePeriod" msprop:Generator_ChildPropName="GetTimePeriodRows" msprop:Generator_UserRelationName="FK_TIMEPERI_RELATIONS_AVAILABL1" msprop:Generator_RelationVarName="relationFK_TIMEPERI_RELATIONS_AVAILABL1" msprop:Generator_UserParentTable="CourseList" msprop:Generator_ParentPropName="CourseListRow" />
      <msdata:Relationship name="FK_AVAILABL_COURSEOPE_COURSE1" msdata:parent="Course" msdata:child="CourseList" msdata:parentkey="课程号" msdata:childkey="CourseID" msprop:Generator_UserChildTable="CourseList" msprop:Generator_ChildPropName="GetCourseListRows" msprop:Generator_UserRelationName="FK_AVAILABL_COURSEOPE_COURSE1" msprop:Generator_ParentPropName="CourseRow" msprop:Generator_RelationVarName="relationFK_AVAILABL_COURSEOPE_COURSE1" msprop:Generator_UserParentTable="Course" />
      <msdata:Relationship name="FK_AVAILABL_COURSEOPE_COURSE" msdata:parent="Course" msdata:child="AvailableCourse" msdata:parentkey="课程号" msdata:childkey="CourseID" msprop:Generator_UserChildTable="AvailableCourse" msprop:Generator_ChildPropName="GetAvailableCourseRows" msprop:Generator_UserRelationName="FK_AVAILABL_COURSEOPE_COURSE" msprop:Generator_ParentPropName="CourseRow" msprop:Generator_RelationVarName="relationFK_AVAILABL_COURSEOPE_COURSE" msprop:Generator_UserParentTable="Course" />
      <msdata:Relationship name="FK_COURSETA_RELATIONS_AVAILABL2" msdata:parent="StudentAvailableCourseList" msdata:child="CourseTaken" msdata:parentkey="LectureID" msdata:childkey="LectureID" msprop:Generator_UserChildTable="CourseTaken" msprop:Generator_ChildPropName="GetCourseTakenRows" msprop:Generator_UserRelationName="FK_COURSETA_RELATIONS_AVAILABL2" msprop:Generator_ParentPropName="StudentAvailableCourseListRow" msprop:Generator_RelationVarName="relationFK_COURSETA_RELATIONS_AVAILABL2" msprop:Generator_UserParentTable="StudentAvailableCourseList" />
      <msdata:Relationship name="FK_RELATION_RELATIONS_AVAILABL2" msdata:parent="StudentAvailableCourseList" msdata:child="DeliverLecture" msdata:parentkey="LectureID" msdata:childkey="LectureID" msprop:Generator_UserChildTable="DeliverLecture" msprop:Generator_ChildPropName="GetDeliverLectureRows" msprop:Generator_UserRelationName="FK_RELATION_RELATIONS_AVAILABL2" msprop:Generator_ParentPropName="StudentAvailableCourseListRow" msprop:Generator_RelationVarName="relationFK_RELATION_RELATIONS_AVAILABL2" msprop:Generator_UserParentTable="StudentAvailableCourseList" />
      <msdata:Relationship name="FK_TIMEPERI_RELATIONS_AVAILABL2" msdata:parent="StudentAvailableCourseList" msdata:child="TimePeriod" msdata:parentkey="LectureID" msdata:childkey="开课号" msprop:Generator_UserChildTable="TimePeriod" msprop:Generator_ChildPropName="GetTimePeriodRows" msprop:Generator_UserRelationName="FK_TIMEPERI_RELATIONS_AVAILABL2" msprop:Generator_ParentPropName="StudentAvailableCourseListRow" msprop:Generator_RelationVarName="relationFK_TIMEPERI_RELATIONS_AVAILABL2" msprop:Generator_UserParentTable="StudentAvailableCourseList" />
      <msdata:Relationship name="FK_COURSETA_RELATIONS_AVAILABL3" msdata:parent="StudentSelectedCourseList" msdata:child="CourseTaken" msdata:parentkey="LectureID" msdata:childkey="LectureID" msprop:Generator_UserChildTable="CourseTaken" msprop:Generator_ChildPropName="GetCourseTakenRows" msprop:Generator_UserRelationName="FK_COURSETA_RELATIONS_AVAILABL3" msprop:Generator_ParentPropName="StudentSelectedCourseListRow" msprop:Generator_RelationVarName="relationFK_COURSETA_RELATIONS_AVAILABL3" msprop:Generator_UserParentTable="StudentSelectedCourseList" />
      <msdata:Relationship name="FK_RELATION_RELATIONS_AVAILABL3" msdata:parent="StudentSelectedCourseList" msdata:child="DeliverLecture" msdata:parentkey="LectureID" msdata:childkey="LectureID" msprop:Generator_UserChildTable="DeliverLecture" msprop:Generator_ChildPropName="GetDeliverLectureRows" msprop:Generator_UserRelationName="FK_RELATION_RELATIONS_AVAILABL3" msprop:Generator_ParentPropName="StudentSelectedCourseListRow" msprop:Generator_RelationVarName="relationFK_RELATION_RELATIONS_AVAILABL3" msprop:Generator_UserParentTable="StudentSelectedCourseList" />
      <msdata:Relationship name="FK_TIMEPERI_RELATIONS_AVAILABL3" msdata:parent="StudentSelectedCourseList" msdata:child="TimePeriod" msdata:parentkey="LectureID" msdata:childkey="开课号" msprop:Generator_UserChildTable="TimePeriod" msprop:Generator_ChildPropName="GetTimePeriodRows" msprop:Generator_UserRelationName="FK_TIMEPERI_RELATIONS_AVAILABL3" msprop:Generator_ParentPropName="StudentSelectedCourseListRow" msprop:Generator_RelationVarName="relationFK_TIMEPERI_RELATIONS_AVAILABL3" msprop:Generator_UserParentTable="StudentSelectedCourseList" />
      <msdata:Relationship name="FK_AVAILABL_COURSEOPE_COURSE2" msdata:parent="Course" msdata:child="StudentAvailableCourseList" msdata:parentkey="课程号" msdata:childkey="CourseID" msprop:Generator_UserChildTable="StudentAvailableCourseList" msprop:Generator_ChildPropName="GetStudentAvailableCourseListRows" msprop:Generator_UserRelationName="FK_AVAILABL_COURSEOPE_COURSE2" msprop:Generator_RelationVarName="relationFK_AVAILABL_COURSEOPE_COURSE2" msprop:Generator_UserParentTable="Course" msprop:Generator_ParentPropName="CourseRow" />
      <msdata:Relationship name="FK_AVAILABL_COURSEOPE_COURSE3" msdata:parent="Course" msdata:child="StudentSelectedCourseList" msdata:parentkey="课程号" msdata:childkey="CourseID" msprop:Generator_UserChildTable="StudentSelectedCourseList" msprop:Generator_ChildPropName="GetStudentSelectedCourseListRows" msprop:Generator_UserRelationName="FK_AVAILABL_COURSEOPE_COURSE3" msprop:Generator_RelationVarName="relationFK_AVAILABL_COURSEOPE_COURSE3" msprop:Generator_UserParentTable="Course" msprop:Generator_ParentPropName="CourseRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>